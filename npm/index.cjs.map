{"version":3,"sources":["../src/index.ts"],"names":["log","nodepath","fg"],"mappings":"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","file":"index.cjs","sourcesContent":["import nodepath from \"node:path\";\n\nimport log from \"debug\";\nimport fg, { Pattern } from \"fast-glob\";\nimport type { NonIndexRouteObject } from \"react-router\";\nimport type { Plugin } from \"vite\";\n\nconst PLUGIN_NAME = \"vite-plugin-conventional-router\";\nconst PLUGIN_VIRTUAL_MODULE_NAME = \"virtual:routes\";\nconst PLUGIN_MAIN_PAGE_FILE = \"index.tsx\";\n\nconst debug = log.debug(PLUGIN_NAME);\n\ntype ConventionalRouterProps = {\n  pages: Pattern | Pattern[];\n};\n\nconst stripSlash = (filepath: string) => {\n  return filepath.replace(/^\\//, \"\").replace(/\\/$/, \"\");\n};\n\nconst filePathToRoutePath = (filepath: string) => {\n  filepath = filepath.replace(nodepath.extname(filepath), \"\").replaceAll(\".\", \"/\") + nodepath.extname(filepath);\n\n  const path_ = filepath.endsWith(PLUGIN_MAIN_PAGE_FILE)\n    ? stripSlash(filepath.replace(PLUGIN_MAIN_PAGE_FILE, \"\"))\n    : stripSlash(filepath.replace(nodepath.extname(filepath), \"\"));\n\n  return path_\n    .split(\"/\")\n    .map((seg) => {\n      if (seg.startsWith(\"@\")) {\n        return seg.replace(\"@\", \":\");\n      }\n\n      if (seg.startsWith(\"$\")) {\n        const [, p] = /^\\$(.+)/.exec(seg) ?? [];\n        return p ? `:${p}?` : seg;\n      }\n\n      return seg;\n    })\n    .join(\"/\");\n};\n\nfunction collectRoutePages(pages: Pattern[]): NonIndexRouteObject[] {\n  const pageModules: string[] = [];\n  let routes: string[] = [];\n\n  for (const pattern of pages) {\n    let files = fg.sync(pattern, { deep: Infinity }).map((file) => file.split(\"/\"));\n\n    for (const file of files) {\n      pageModules.push(nodepath.resolve(file.join(\"/\")));\n    }\n\n    while (true) {\n      const group = files.map((file) => file[0]);\n      if (new Set(group).size > 1) {\n        break;\n      } else {\n        files = files.map((file) => file.slice(1));\n      }\n    }\n\n    const files_ = files.map((file) => file.join(\"/\")).flat();\n    routes = [...routes, ...files_];\n  }\n\n  return routes\n    .map((s) => filePathToRoutePath(s))\n    .map((route, index) => {\n      return {\n        path: route,\n        element: pageModules[index],\n      };\n    });\n}\n\nconst isSubPath = (parentPath: string, subPath: string) => {\n  if (\n    parentPath !== \"\" &&\n    subPath.startsWith(parentPath) &&\n    subPath.split(\"/\").length - parentPath.split(\"/\").length === 1\n  ) {\n    return true;\n  }\n\n  return false;\n};\n\nconst arrangeRoutes = (\n  routes: NonIndexRouteObject[],\n  parent: NonIndexRouteObject,\n  subRoutesPathAppendToParent: string[],\n): NonIndexRouteObject => {\n  const subs = routes.filter((route) => isSubPath(parent.path!, route.path!));\n  subRoutesPathAppendToParent.push(...subs.map((s) => \"/\" + s.path!));\n  return Object.assign(parent, {\n    path: \"/\" + parent.path!,\n    children: subs.map((sub) => arrangeRoutes(routes, sub, subRoutesPathAppendToParent)),\n  });\n};\n\nconst stringifyRoutes = (routes: NonIndexRouteObject[]): string => {\n  return `[\n    ${routes.map(\n      (route, index) => `{\n        path: \"${route.path}\",\n        lazy: () => import(\"${route.element}\"),\n        children: ${!route.children ? \"[]\" : stringifyRoutes(route.children as NonIndexRouteObject[])}\n        // Component: Page$${index}.default,\n        // shouldValidate: !!Page$${index}.shouldValidate\n      },`,\n    )}\n  ]`;\n};\n\nexport default function ConventionalRouter(options?: Partial<ConventionalRouterProps>): Plugin {\n  if (!options) {\n    options = { pages: [] };\n  }\n\n  let { pages = [] } = options;\n\n  if (!Array.isArray(pages)) {\n    pages = [pages];\n  }\n\n  return {\n    name: PLUGIN_NAME,\n    resolveId(source) {\n      if (source === PLUGIN_VIRTUAL_MODULE_NAME) {\n        return source;\n      }\n\n      return null;\n    },\n    async load(id) {\n      if (id === PLUGIN_VIRTUAL_MODULE_NAME) {\n        debug(\"Start collectiong pages\");\n        const routes = collectRoutePages(pages);\n        debug(\"routes\", routes);\n        const subRoutesPathAppendToParent: string[] = [];\n        routes\n          .filter((r) => r.path!.split(\"/\").length === 1)\n          .map((route) => arrangeRoutes(routes, route, subRoutesPathAppendToParent));\n\n        const finalRoutes = routes\n          .filter((r) => !subRoutesPathAppendToParent.includes(r.path!))\n          .map((r) =>\n            r.path!.startsWith(\"/\")\n              ? r\n              : {\n                  ...r,\n                  path: \"/\" + r.path,\n                },\n          );\n\n        debug(\"finalRoutes\", finalRoutes);\n        return {\n          code: `\n          const routes = ${stringifyRoutes(finalRoutes)};\n          console.log(routes);\n          export default routes;`,\n        };\n      }\n      return null;\n    },\n  };\n}\n"]}
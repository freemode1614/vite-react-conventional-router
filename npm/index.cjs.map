{"version":3,"sources":["../src/constants.ts","../src/route.ts","../src/index.ts"],"names":["nodepath","fg","createFilter"],"mappings":"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","file":"index.cjs","sourcesContent":["export const DEFAULT_IGNORE_PATTERN = [\"node_modules/**\"];\nexport const PLUGIN_NAME = \"vite-plugin-conventional-router\";\nexport const PLUGIN_VIRTUAL_MODULE_NAME = \"virtual:routes\";\nexport const PLUGIN_MAIN_PAGE_FILE = \"index.tsx\";\n\nexport const LAYOUT_FILE_NAME = \"layout\";\nexport const NOT_FOUND_FILE_NAME = \"404\";\nexport const ERROR_BOUNDARY_FILE_NAME = \"errorBoundary\";\nexport const LOADER_FILE_NAME = \"loader\";\nexport const HANDLE_FILE_NAME = \"handle\";\n\nexport const OPTIONAL_ROUTE_FLAG = \"$\";\nexport const DYNAMIC_ROUTE_FLAG = \"@\";\n","import nodepath from \"node:path\";\n\nimport { NonIndexRouteObject } from \"react-router\";\n\nimport {\n  DYNAMIC_ROUTE_FLAG,\n  ERROR_BOUNDARY_FILE_NAME,\n  HANDLE_FILE_NAME,\n  LAYOUT_FILE_NAME,\n  LOADER_FILE_NAME,\n  NOT_FOUND_FILE_NAME,\n  OPTIONAL_ROUTE_FLAG,\n} from \"./constants\";\n\nconst reserved_route_filed_keys = [\n  LAYOUT_FILE_NAME,\n  ERROR_BOUNDARY_FILE_NAME,\n  LOADER_FILE_NAME,\n  HANDLE_FILE_NAME,\n];\n\nconst validRouteFieldKeyRegexp = (\n  fieldKey: string,\n  filepath: string,\n  options: { allowTs?: boolean } = {},\n) => {\n  if (fieldKey === LOADER_FILE_NAME || fieldKey === HANDLE_FILE_NAME) {\n    options.allowTs = true;\n  }\n\n  return new RegExp(\n    `^([\\\\w\\\\${OPTIONAL_ROUTE_FLAG}\\\\${DYNAMIC_ROUTE_FLAG}]+\\\\.){0,}(${fieldKey})(\\\\.tsx${options.allowTs ? \"?\" : \"\"})$`,\n  ).test(nodepath.basename(filepath));\n};\n\nexport const isFieldKeyRoute = (\n  routeA: NonIndexRouteObject,\n  routeB: NonIndexRouteObject,\n  fieldKey: string,\n) => {\n  if (\n    nodepath.dirname(routeA.element as string) ===\n    nodepath.dirname(routeB.element! as string)\n  ) {\n    const condition = validRouteFieldKeyRegexp(\n      fieldKey,\n      routeB.element! as string,\n    );\n\n    if (routeA.path!.split(\"/\").length === 1 && routeA.path === \"\") {\n      return condition;\n    }\n\n    return (\n      condition &&\n      routeB.path!.split(\"/\").length - routeA.path!.split(\"/\").length === 1\n    );\n  }\n\n  return false;\n};\n\nexport function collectRouteFieldKeyRoute(routes: NonIndexRouteObject[]) {\n  const testRoutePath = (routePath: string) => {\n    return reserved_route_filed_keys\n      .map((fieldKey) => {\n        return validRouteFieldKeyRegexp(fieldKey, routePath);\n      })\n      .some((result) => result);\n  };\n\n  return routes.filter((route) =>\n    testRoutePath(nodepath.basename(route.element! as string)),\n  );\n}\n\nconst reserved_root_field_keys = [\n  NOT_FOUND_FILE_NAME,\n  LAYOUT_FILE_NAME,\n  LOADER_FILE_NAME,\n];\n\nexport function collectRootRouteRelatedRoute(\n  routes: NonIndexRouteObject[],\n): [\n  NonIndexRouteObject | undefined,\n  NonIndexRouteObject | undefined,\n  NonIndexRouteObject | undefined,\n  NonIndexRouteObject[],\n] {\n  return [\n    ...(reserved_root_field_keys.map((fieldKey) =>\n      routes.find((route) => route.path === fieldKey),\n    ) as [\n      NonIndexRouteObject | undefined,\n      NonIndexRouteObject | undefined,\n      NonIndexRouteObject | undefined,\n    ]),\n    routes.filter(\n      (route) => !reserved_root_field_keys.includes(route.path! as string),\n    ),\n  ];\n}\n","import nodepath from \"node:path\";\n\nimport { createFilter } from \"@rollup/pluginutils\";\nimport fg, { Pattern } from \"fast-glob\";\nimport type { NonIndexRouteObject } from \"react-router\";\nimport { type Plugin, ViteDevServer } from \"vite\";\n\nimport {\n  DEFAULT_IGNORE_PATTERN,\n  DYNAMIC_ROUTE_FLAG,\n  ERROR_BOUNDARY_FILE_NAME,\n  HANDLE_FILE_NAME,\n  LAYOUT_FILE_NAME,\n  LOADER_FILE_NAME,\n  OPTIONAL_ROUTE_FLAG,\n  PLUGIN_MAIN_PAGE_FILE,\n  PLUGIN_NAME,\n  PLUGIN_VIRTUAL_MODULE_NAME,\n} from \"./constants\";\nimport {\n  collectRootRouteRelatedRoute,\n  collectRouteFieldKeyRoute,\n  isFieldKeyRoute,\n} from \"./route\";\n\ntype ConventionalRouterProps = {\n  include: Pattern | Pattern[];\n  exclude: Pattern | Pattern[];\n};\n\nexport const deepCopy = <T = unknown>(data: T): T =>\n  JSON.parse(JSON.stringify(data));\n\n/**\n * Strp slash before and after.\n */\nexport const stripSlash = (filepath: string) => {\n  return filepath.replace(/^\\//, \"\").replace(/\\/$/, \"\");\n};\n\n/**\n * Route path generate by file path.\n */\nexport const filePathToRoutePath = (filepath: string) => {\n  filepath =\n    filepath.replace(nodepath.extname(filepath), \"\").replaceAll(\".\", \"/\") +\n    nodepath.extname(filepath);\n\n  const path_ = filepath.endsWith(PLUGIN_MAIN_PAGE_FILE)\n    ? stripSlash(filepath.replace(PLUGIN_MAIN_PAGE_FILE, \"\"))\n    : stripSlash(filepath.replace(nodepath.extname(filepath), \"\"));\n\n  return path_\n    .split(\"/\")\n    .map((seg) => {\n      if (seg.startsWith(DYNAMIC_ROUTE_FLAG)) {\n        return seg.replace(DYNAMIC_ROUTE_FLAG, \":\");\n      }\n\n      if (seg.startsWith(OPTIONAL_ROUTE_FLAG)) {\n        const [, p] =\n          new RegExp(`^\\\\${OPTIONAL_ROUTE_FLAG}(.+)`).exec(seg) ?? [];\n        return p ? `:${p}?` : seg;\n      }\n\n      return seg;\n    })\n    .join(\"/\");\n};\n\n/**\n * Collect files from FS by fast-glob.\n */\nexport const collectRoutePages = (\n  pages: Pattern[],\n  ignore: Pattern[],\n): NonIndexRouteObject[] => {\n  const pageModules: string[] = [];\n  let routes: string[] = [];\n\n  for (const pattern of pages) {\n    let files = fg\n      .sync(pattern, {\n        deep: Infinity,\n        ignore: [...DEFAULT_IGNORE_PATTERN, ...(ignore ?? [])],\n      })\n      .map((file) => file.split(\"/\"));\n\n    for (const file of files) {\n      pageModules.push(nodepath.resolve(file.join(\"/\")));\n    }\n\n    while (true) {\n      const group = files.map((file) => file[0]);\n      if (new Set(group).size > 1) {\n        break;\n      } else {\n        files = files.map((file) => file.slice(1));\n      }\n    }\n\n    routes = [...routes, ...files.map((file) => file.join(\"/\")).flat()];\n  }\n\n  return routes\n    .map((s) => filePathToRoutePath(s))\n    .map((route, index) => {\n      return {\n        path: route,\n        element: pageModules[index],\n      };\n    });\n};\n\n/**\n * Sub-path evaluation.\n */\nexport const isSubPath = (parentPath: string, subPath: string) => {\n  if (\n    parentPath !== \"\" &&\n    subPath.startsWith(parentPath) &&\n    subPath.split(\"/\").length - parentPath.split(\"/\").length === 1\n  ) {\n    return true;\n  }\n\n  return false;\n};\n\n/**\n * Layout file evaluation.\n */\nexport const isLayoutFilePath = (filepath: string) => {\n  return new RegExp(\n    `^([\\\\w\\\\${OPTIONAL_ROUTE_FLAG}\\\\${DYNAMIC_ROUTE_FLAG}]+\\\\.){0,}(${LAYOUT_FILE_NAME})(\\\\.tsx)$`,\n  ).test(nodepath.basename(filepath));\n};\n\n/**\n *\n * Two possible scenario\n * 1.\n * xx/xx/index.tsx\n * xx/xx/layout.tsx\n *\n * 2.\n * xx/xx.tsx\n * xx/xx.layout.tsx\n */\nexport const isLayoutRoute = (\n  route: NonIndexRouteObject,\n  layoutRoute: NonIndexRouteObject,\n) => {\n  if (\n    nodepath.dirname(route.element! as string) ===\n    nodepath.dirname(layoutRoute.element! as string)\n  ) {\n    const condition1 = isLayoutFilePath(\n      nodepath.basename(layoutRoute.element! as string),\n    );\n    return (\n      condition1 &&\n      layoutRoute.path!.split(\"/\").length - route.path!.split(\"/\").length === 1\n    );\n  }\n\n  return false;\n};\n\n/**\n *\n * Valid error-boundary path\n *\n */\nexport const isErrorBoundaryFilePath = (filepath: string) => {\n  return new RegExp(\n    `^([\\\\w\\\\${OPTIONAL_ROUTE_FLAG}\\\\${DYNAMIC_ROUTE_FLAG}]+\\\\.){0,}(${ERROR_BOUNDARY_FILE_NAME})(\\\\.tsx)$`,\n  ).test(nodepath.basename(filepath));\n};\n\n/**\n *\n * Two possible scenario\n * 1.\n * xx/xx/index.tsx\n * xx/xx/errorBoundary.tsx\n *\n * 2.\n * xx/xx.tsx\n * xx/xx.errorBoundary.tsx\n *\n */\nexport const isErrorBoundaryRoute = (\n  route: NonIndexRouteObject,\n  errorBoundaryRoute: NonIndexRouteObject,\n) => {\n  if (\n    nodepath.dirname(route.element! as string) ===\n    nodepath.dirname(errorBoundaryRoute.element! as string)\n  ) {\n    const condition1 = isErrorBoundaryFilePath(\n      nodepath.basename(errorBoundaryRoute.element! as string),\n    );\n    if (route.path!.split(\"/\").length === 1 && route.path === \"\") {\n      return condition1;\n    }\n    return (\n      condition1 &&\n      errorBoundaryRoute.path!.split(\"/\").length -\n        route.path!.split(\"/\").length ===\n        1\n    );\n  }\n\n  return false;\n};\n\n/**\n *\n * Valid loader path\n *\n */\nexport const isLoaderFilePath = (filepath: string) => {\n  return new RegExp(\n    `^([\\\\w\\\\${OPTIONAL_ROUTE_FLAG}\\\\${DYNAMIC_ROUTE_FLAG}]+\\\\.){0,}(${LOADER_FILE_NAME})(\\\\.tsx?)$`,\n  ).test(nodepath.basename(filepath));\n};\n\n/**\n *\n * Two possible scenario\n * 1.\n * xx/xx/loader.tsx\n *\n * 2.\n * xx/xx.loader.tsx\n *\n */\nexport const isLoaderRoute = (\n  route: NonIndexRouteObject,\n  loaderRoute: NonIndexRouteObject,\n) => {\n  if (\n    nodepath.dirname(route.element! as string) ===\n    nodepath.dirname(loaderRoute.element! as string)\n  ) {\n    const condition1 = isLoaderFilePath(\n      nodepath.basename(loaderRoute.element! as string),\n    );\n    if (route.path!.split(\"/\").length === 1 && route.path === \"\") {\n      return condition1;\n    }\n    return (\n      condition1 &&\n      loaderRoute.path!.split(\"/\").length - route.path!.split(\"/\").length === 1\n    );\n  }\n\n  return false;\n};\n\n/**\n * Arrange routes.\n */\nexport const arrangeRoutes = (\n  routes: NonIndexRouteObject[],\n  parent: NonIndexRouteObject,\n  subRoutesPathAppendToParent: string[],\n  layoutAndErrorBoundaries: NonIndexRouteObject[] = [],\n): NonIndexRouteObject => {\n  const subs = routes.filter((route) => isSubPath(parent.path!, route.path!));\n\n  const layout = layoutAndErrorBoundaries.find((route) =>\n    isFieldKeyRoute(parent, route, LAYOUT_FILE_NAME),\n  );\n\n  const errorBoundary = layoutAndErrorBoundaries.find((route) =>\n    isFieldKeyRoute(parent, route, ERROR_BOUNDARY_FILE_NAME),\n  );\n\n  const loader = layoutAndErrorBoundaries.find((route) =>\n    isFieldKeyRoute(parent, route, LOADER_FILE_NAME),\n  );\n\n  const handle = layoutAndErrorBoundaries.find((route) =>\n    isFieldKeyRoute(parent, route, HANDLE_FILE_NAME),\n  );\n\n  subRoutesPathAppendToParent.push(...subs.map((s) => \"/\" + s.path!));\n\n  Object.assign(parent, {\n    path: \"/\" + parent.path!,\n    loader: loader?.element,\n    handle: handle?.element,\n    children: subs.map((sub) =>\n      arrangeRoutes(\n        routes,\n        sub,\n        subRoutesPathAppendToParent,\n        layoutAndErrorBoundaries,\n      ),\n    ),\n    ErrorBoundary: errorBoundary?.element,\n  });\n\n  if (layout) {\n    const parentCopy = deepCopy(parent);\n    return Object.assign(parent, layout, {\n      path: parentCopy.path,\n      children: [parentCopy],\n      // Don't set error boundary in layout\n      ErrorBoundary: undefined,\n    });\n  }\n\n  return parent;\n};\n\n/**\n * Stringify routes data.\n */\nexport const stringifyRoutes = (routes: NonIndexRouteObject[]): string => {\n  const code = routes\n    .map((route) => {\n      const errorBoundary = route.ErrorBoundary\n        ? [\n            `const { default: ErrorBoundary_ } = await import(\"${route.ErrorBoundary}\")`,\n            `ErrorBoundary = ErrorBoundary_;`,\n          ].join(\"\\n;\")\n        : \"\";\n\n      const handle = route.handle\n        ? [\n            [\n              `const { default: handle_ } = await import(\"${route.handle}\")`,\n              `handle = handle_;`,\n            ].join(\";\"),\n          ].join(\"\\n;\")\n        : \"\";\n\n      return `{\n        path: \"${route.path}\",\n        loader: async (...args) => {\n          const { default: loader_ } = await import(\"${route.loader}\");\n          return await loader_(...args);\n        },\n        async lazy(){\n          const { default: Component, initProps ,...rest }  = await import(\"${route.element}\");\n          let ErrorBoundary = undefined;\n          let loader = undefined;\n          let handle = undefined;\n          ${errorBoundary}\n          ${handle}\n          return {\n            ...rest, handle, ErrorBoundary, Component\n          }\n        },\n        children: ${!route.children ? \"[]\" : stringifyRoutes(route.children as NonIndexRouteObject[])}\n      }`;\n    })\n    .join(\",\");\n\n  return `[${code}]`;\n};\n\nexport default function ConventionalRouter(\n  options?: Partial<ConventionalRouterProps>,\n): Plugin {\n  options = { include: [], exclude: [], ...(options ?? {}) };\n\n  let { include } = options;\n  let { exclude } = options;\n\n  const filter = createFilter(include, exclude);\n\n  include = (Array.isArray(include) ? include : [include]) as string[];\n  exclude = (Array.isArray(exclude) ? exclude : [exclude]) as string[];\n\n  let devServer: ViteDevServer;\n\n  return {\n    name: PLUGIN_NAME,\n    configureServer(server) {\n      devServer = server;\n    },\n    resolveId(source) {\n      if (source === PLUGIN_VIRTUAL_MODULE_NAME) {\n        return source;\n      }\n\n      return null;\n    },\n    async load(id) {\n      if (id === PLUGIN_VIRTUAL_MODULE_NAME) {\n        const routes_ = collectRoutePages(include, exclude);\n        const subRoutesPathAppendToParent: string[] = [];\n\n        /**\n         * Only need one not found fallback\n         */\n\n        const [notFoundRoute, rootLayoutRoute, , routes] =\n          collectRootRouteRelatedRoute(routes_);\n\n        const layoutsAndErrorBoundaries = collectRouteFieldKeyRoute(routes);\n\n        // 404 Page For Route.\n        if (notFoundRoute) {\n          subRoutesPathAppendToParent.push(`/${notFoundRoute.path!}`);\n        }\n\n        const layoutsAndErrorBoundariesElements = new Set(\n          layoutsAndErrorBoundaries.map((route) => route.element),\n        );\n\n        const routesReadyToArrange = routes.filter(\n          (r) => !layoutsAndErrorBoundariesElements.has(r.element!),\n        );\n\n        const mapCallback = (r: NonIndexRouteObject) => {\n          if (r.path!.startsWith(\"/\")) {\n            return r;\n          } else {\n            return {\n              ...r,\n              path: `/${r.path}`,\n            };\n          }\n        };\n\n        routesReadyToArrange\n          // First filer\n          .filter((r) => r.path!.split(\"/\").length === 1)\n          // Start arrange\n          .forEach((route) =>\n            arrangeRoutes(\n              routesReadyToArrange,\n              route,\n              subRoutesPathAppendToParent,\n              layoutsAndErrorBoundaries,\n            ),\n          );\n\n        // Remove all sub routes.\n        const intermediaRoutes = routesReadyToArrange.filter(\n          (r) => !subRoutesPathAppendToParent.includes(r.path!),\n        );\n\n        subRoutesPathAppendToParent.length = 0;\n\n        intermediaRoutes\n          // Second filter\n          .filter((r) => r.path!.split(\"/\").length > 2)\n          // Start arrange\n          .forEach((route) =>\n            arrangeRoutes(\n              intermediaRoutes,\n              route,\n              subRoutesPathAppendToParent,\n              layoutsAndErrorBoundaries,\n            ),\n          );\n\n        let finalRoutes = intermediaRoutes\n          .filter((r) => !subRoutesPathAppendToParent.includes(r.path!))\n          .map(mapCallback);\n\n        if (rootLayoutRoute) {\n          finalRoutes = [\n            {\n              ...rootLayoutRoute,\n              path: \"/\",\n              children: finalRoutes,\n            },\n          ];\n        }\n\n        if (notFoundRoute) {\n          finalRoutes.push({ ...notFoundRoute, path: \"*\" });\n        }\n\n        return {\n          code: `\n          const routes = ${stringifyRoutes(finalRoutes)};\n          if(import.meta.env.DEV) {\n            console.log(routes);\n          }\n          export default routes;\n          `,\n        };\n      }\n\n      return null;\n    },\n    watchChange(id, change) {\n      if (\n        filter(id) &&\n        (change.event === \"create\" || change.event === \"delete\")\n      ) {\n        devServer.restart();\n      }\n    },\n  };\n}\n"]}